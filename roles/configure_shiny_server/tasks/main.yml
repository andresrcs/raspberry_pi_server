---
- name: Create shiny-apps group
  group:
    name: shiny-apps

- name: Create shiny user
  user:
    name: shiny
    system: true
    create_home: true
    group: shiny-apps

- name: Add the main user to the shiny-apps group
  user:
    name: "{{ ansible_user }}"
    append: true
    groups:
      - shiny-apps

- name: Create folders for shiny-server
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - path: /var/log/shiny-server
      owner: shiny
      group: root
      mode: "0655"
    - path: /srv/shiny-server
      owner: "{{ ansible_user }}"
      group: shiny-apps
      mode: "0777"
    - path: /var/lib/shiny-server
      owner: root
      group: root
      mode: "0655"
    - path: /etc/shiny-server
      owner: root
      group: root
      mode: "0655"

- name: Install pandoc library
  apt:
    name:
      - pandoc
      - pandoc-citeproc
    state: present

- name: Create symlinks to the system version of pandoc
  file:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    state: link
    force: true
  with_items:
    - path: /usr/local/shiny-server/ext/pandoc/pandoc
      src: /usr/bin/pandoc
    - path: /usr/local/shiny-server/ext/pandoc/pandoc-citeproc
      src: /usr/bin/pandoc-citeproc

- name: Create symlinks for the Shiny sample apps
  file:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    state: link
    force: true
  with_items:
    - path: /srv/shiny-server/sample-apps
      src: /usr/local/shiny-server/samples/sample-apps
    - path: /srv/shiny-server/index.html
      src: /usr/local/shiny-server/samples/welcome.html

- name: Check if default_site file exists
  stat:
    path: /etc/nginx/sites-enabled/default_site
  register: nginx_file_check

- block:
  - name: Add map to Nginx config file
    blockinfile:
      path: /etc/nginx/sites-enabled/default_site
      block: |
        map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
        }
      marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK #1 -->"
      insertbefore: BOF
    notify: restart_nginx

  - name: Configure Nginx as reverse proxy for shiny-server
    blockinfile:
      path: /etc/nginx/sites-enabled/default_site
      block: |2
                rewrite ^/shiny$ $scheme://$http_host/shiny/ permanent;

                location /shiny/ {
                         rewrite ^/shiny/(.*)$ /$1 break;
                         proxy_pass http://localhost:3838;
                         proxy_redirect / $scheme://$http_host/shiny/;
                         proxy_http_version 1.1;
                         proxy_set_header Upgrade $http_upgrade;
                         proxy_set_header Connection $connection_upgrade;
                         proxy_read_timeout 20d;
                         proxy_buffering off;
                }
      marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK #2 -->"
      insertafter: "server_name _;"
    notify: restart_nginx
  when: nginx_file_check.stat.exists
