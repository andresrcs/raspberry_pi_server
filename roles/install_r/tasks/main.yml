---
- name: Check R version installed
  command: "R --version"
  register: version_r
  changed_when: false
  failed_when: false

- block:
    - name: Install system dependencies
      apt:
        name:
          - gfortran
          - libreadline-dev
          - libx11-dev
          - libxt-dev
          - libpng-dev
          - libjpeg-dev
          - libcairo2-dev
          - xvfb
          - libbz2-dev
          - libzstd-dev
          - liblzma-dev
          - libssh-dev
          - libblas-dev
          - libopenblas-base
          - liblapack-dev
          - libcurl4-openssl-dev
          - zlib1g-dev
          - texinfo
          - texlive
          - texlive-fonts-extra
          - screen
          - wget
          - libpcre2-dev
          - openjdk-11-jdk
        state: present

    - name: Download R source
      unarchive:
        src: "https://cran.rstudio.com/src/base/R-{{ r_version\n
        | regex_search('^\\d', multiline=True)\n
        | trim }}/R-{{ r_version }}.tar.gz"
        remote_src: true
        dest: /usr/local/src
        creates: "/usr/local/src/R-{{ r_version }}"

    - name: Configure R compilation
      command:
        cmd: ./configure --enable-R-shlib --with-blas --with-lapack
        chdir: "/usr/local/src/R-{{ r_version }}"
        creates: "/usr/local/src/R-{{ r_version }}/Makeconf"

    - name: Compile R
      make:
        chdir: "/usr/local/src/R-{{ r_version }}"

    - name: Install R
      make:
        chdir: "/usr/local/src/R-{{ r_version }}"
        target: install

    - name: Create the site-library folder
      file:
        path: /usr/local/lib/R/site-library/
        state: directory
        mode: "0777"
        recurse: true

    - name: Enable parallel installation of R packages and enable cairo
      lineinfile:
        path: /usr/local/lib/R/etc/Rprofile.site
        line: "{{ item }}"
        create: true
        insertafter: EOF
      with_items:
        - options(Ncpus = 4)
        - options(bitmapType='cairo')

    - name: Remove installation files
      file:
        path: "/usr/local/src/R-{{ r_version }}"
        state: absent
  when:
    - "r_version|string not in version_r|string"
    - use_r4pi == false

- block:
    - name: Add R4Pi repo key
      get_url:
        url: https://pkgs.r4pi.org/dl/r4pi.asc
        dest: /etc/apt/trusted.gpg.d/r4pi.asc

    - name: Add R4Pi apt source
      apt_repository:
        repo: "deb http://debs.r4pi.org/ bullseye main"
        state: present

    - name: Install R4Pi
      apt:
        name:
          - r4pi
        update_cache: true
        state: present

    - name: Create the site-library folder
      file:
        path: /opt/R/release/lib/R/site-library/
        state: directory
        mode: "0777"
        recurse: true

    - name: Enable parallel installation of R packages and cairo rendering
      lineinfile:
        path: /opt/R/release/lib/R/etc/Rprofile.site
        line: "{{ item }}"
        create: true
        insertafter: EOF
      with_items:
        - options(Ncpus = 4)
        - options(bitmapType = 'cairo')

    - name: Set the package repositories to the 32-bit R4Pi repo + CRAN
      lineinfile:
        path: /opt/R/release/lib/R/etc/Rprofile.site
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        insertbefore: 'r\["CRAN"\]'
      with_items:
        - regexp: 'r\["CRAN"\]'
          line: '    r["CRAN"] <- "https://cran.rstudio.com/"'
        - regexp: 'r\["R4Pi"\]'
          line: '    r["R4Pi"] <- "https://pkgs.r4pi.org/"'
      when: linux_arch == '32'

    - name: Set the package repositories to the 64-bit R4Pi repo + CRAN
      lineinfile:
        path: /opt/R/release/lib/R/etc/Rprofile.site
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        insertbefore: 'r\["CRAN"\]'
      with_items:
        - regexp: 'r\["CRAN"\]'
          line: '    r["CRAN"] <- "https://cran.rstudio.com/"'
        - regexp: 'r\["R4Pi"\]'
          line: '    r["R4Pi"] <- "https://pkgs.r4pi.org/aarch64"'
      when: linux_arch == '64'

  when:
    - use_r4pi
    - ansible_distribution == 'Debian'
